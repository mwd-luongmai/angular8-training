{"version":3,"sources":["src/app/features/skills/skill-list/skill-list.component.html","src/app/features/skills/skill-profile/skill-profile.component.html","src/app/features/skills/skill-list/skill-list.component.scss","src/app/features/skills/skill-list/skill-list.component.ts","src/app/features/skills/skill-profile/skill-profile.component.scss","src/app/features/skills/skill-profile/skill-profile.component.ts","src/app/features/skills/skill-routing.module.ts","src/app/features/skills/skill.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"flex-comp-container\\\">\\n  <div class=\\\"flex-comp-item\\\">\\n    <div class=\\\"person-grid-container\\\">\\n      \\n      <mat-card  routerLink=\\\"/skills/skill-profile\\\" class=\\\"person-card-item\\\" >\\n      \\n        <mat-card-header>\\n          <mat-card-title>Create new skill</mat-card-title>\\n        \\n        </mat-card-header>\\n        <mat-card-content></mat-card-content>\\n      \\n      </mat-card>\\n      <mat-card [routerLink]=\\\"['/skills/',skill.id]\\\" *ngFor=\\\"let skill of skills\\\"  class=\\\"person-card-item\\\" >\\n        <mat-card-header>\\n          <mat-card-title>{{ skill.skillName }}</mat-card-title>\\n          <mat-card-subtitle\\n            >{{ skill.skillName }} (<span *ngIf=\\\"skill.skillStatus; else inActive\\\" i18n\\n              >Active</span\\n            >)<ng-template #inActive><span i18n>Inactive</span></ng-template>\\n          </mat-card-subtitle>\\n        </mat-card-header>\\n        <mat-card-content></mat-card-content>\\n      \\n      </mat-card>\\n    \\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"flex-comp-container skill-profile\\\">\\n  <div class=\\\"message\\\" *ngIf=\\\"errorMessages.server_message && skillId !='' \\\"><h2>{{errorsDef.server_message}}</h2></div>\\n    <mat-card *ngIf=\\\"isComponentReady\\\">\\n      <mat-card-title class=\\\"align-left\\\">{{ skillId?\\\"Update\\\":\\\"Create\\\" }} Skill Profile </mat-card-title>\\n      <mat-card-content>\\n        <form [formGroup]=\\\"skillProfile\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n          <div class=\\\"clear-float\\\">\\n            <button (click)=\\\"onSubmit()\\\" mat-raised-button [disabled]=\\\"loading\\\" color=\\\"primary\\\" class=\\\"add-skill-level\\\">\\n              <mat-icon><i class=\\\"material-icons md-dark\\\">save</i></mat-icon>\\n              {{ skillId?\\\"Update\\\":\\\"Create\\\" }} skill\\n            </button>\\n          </div>\\n          {{messages}}\\n\\n          <div id=\\\"form-error\\\">\\n            <validation-messages\\n              *ngIf=\\\"isError\\\"\\n              [errors]=\\\"errorMessages\\\"\\n              [errorsDef]=\\\"errorsDef\\\"\\n            ></validation-messages>\\n          </div>\\n          \\n          <form-input\\n            formControlName=\\\"skillName\\\"\\n            [errors]=\\\"skillProfileForm.skillName.errors\\\"\\n            [errorVisible]=\\\"!skillProfileForm.skillName.pristine || submitted\\\"\\n            [placeholder]=\\\"'Enter your skill profile name'\\\"\\n            id=\\\"skill-name\\\"\\n          ></form-input>\\n\\n          <form-input\\n            formControlName=\\\"skillSchemaName\\\"\\n            [errors]=\\\"skillProfileForm.skillSchemaName.errors\\\"\\n            [errorVisible]=\\\"!skillProfileForm.skillSchemaName.pristine || submitted\\\"\\n            [placeholder]=\\\"'Enter your skill schema name'\\\"\\n            id=\\\"skill-schema-name\\\"\\n          ></form-input>\\n         \\n\\n          \\n        \\n\\n          <mat-slide-toggle \\n            formControlName=\\\"skillStatus\\\"\\n            class=\\\"example-margin\\\"  \\n            \\n                 \\n            >\\n            {{skillProfileForm.skillStatus.value?\\\"Enabled\\\":\\\"Disabled\\\"}}\\n          </mat-slide-toggle>\\n\\n          <br>\\n          <br>\\n          <div class=\\\"clear-float\\\">Skill Levels</div>\\n          <div class=\\\"clear-float\\\">\\n            <button type=\\\"button\\\" (click)=\\\"onAddSkillLevel()\\\" id=\\\"add-skill-button\\\" mat-raised-button [disabled]=\\\"loading\\\" color=\\\"primary\\\" class=\\\"add-skill-level\\\">\\n              <mat-icon><i class=\\\"material-icons md-dark\\\">add</i></mat-icon>\\n              Add skill level\\n            </button>\\n            <br>\\n          </div>\\n\\n          <div formArrayName=\\\"skillLevels\\\" class=\\\"clear-float\\\">\\n            \\n            <div *ngFor=\\\"let skill of skillLevels.controls; let i=index\\\">\\n              <div  [formGroupName]=\\\"i\\\" class=\\\"skill-level-detail\\\" id=\\\"skill-level-index-{{i}}\\\">\\n                <mat-card>\\n                  <mat-card-title class=\\\"align-left skill-level-title\\\"> {{skill.get('skillLevelName').value}} \\n                    <button type=\\\"button\\\" (click)=\\\"removeSkillLevel(i)\\\" id=\\\"remove-skill-button-{{i}}\\\" [disabled]=\\\"loading\\\" mat-mini-fab color=\\\"warn\\\" class=\\\"remove-skill-level\\\">\\n                      <mat-icon>delete</mat-icon>\\n                    </button>\\n                  </mat-card-title>\\n                  <mat-card-content>\\n                    \\n                      <form-input\\n                        formControlName=\\\"skillLevelName\\\"\\n                        [errors]=\\\"skill.get('skillLevelName').errors\\\"\\n                        [errorVisible]=\\\"!skill.get('skillLevelName').pristine || submitted\\\"\\n                        [placeholder]=\\\"'Enter your skill level'\\\"\\n                        id=\\\"skill-level-name-{{i}}\\\"\\n                      ></form-input>\\n\\n                      <br>\\n                      <br>\\n                      <form-input\\n                        formControlName=\\\"skillLevelDescription\\\"\\n                        [type]=\\\"'editor'\\\"\\n                        [config]=\\\"{ toolbar: [ 'heading', '|', 'bold', 'italic' ], initialData: skill.get('skillLevelDescription').value}\\\"\\n                        [errors]=\\\"skill.get('skillLevelDescription').errors\\\"\\n                        [errorVisible]=\\\"!skill.get('skillLevelDescription').pristine || submitted\\\"\\n                        [placeholder]=\\\"'Skill level description'\\\"\\n                        id=\\\"skill-level-description-{{i}}\\\"\\n                      ></form-input>\\n\\n                  </mat-card-content>\\n                </mat-card>  \\n              </div>\\n            </div>\\n          </div>\\n          \\n          <div class=\\\"clear-float\\\" *ngIf=\\\"skillLevels.controls.length > 0\\\">\\n            <button (click)=\\\"onSubmit()\\\" mat-raised-button [disabled]=\\\"loading\\\" color=\\\"primary\\\" class=\\\"add-skill-level\\\">\\n              <mat-icon><i class=\\\"material-icons md-dark\\\">save</i></mat-icon>\\n              {{ skillId?\\\"Update\\\":\\\"Create\\\" }} skill\\n            </button>\\n          </div>\\n          <br>\\n          <br>\\n        </form>\\n      </mat-card-content>\\n    </mat-card>\\n    <app-loading [visible]=\\\"loading\\\"></app-loading>\\n</div>\\n\"","export default \".flex-comp-container {\\n  display: flex;\\n  flex-flow: row wrap;\\n  justify-content: center;\\n  align-items: stretch;\\n}\\n\\n.person-grid-container {\\n  display: flex;\\n  flex-flow: row wrap;\\n  justify-content: space-around;\\n}\\n\\n.person-card-item {\\n  cursor: pointer;\\n  flex-basis: 350px;\\n  height: 120px;\\n  margin-top: 20px;\\n}\\n\\n.person-card-item mat-card-title {\\n  text-align: left;\\n}\\n\\n.person-avatar {\\n  width: 100px;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  margin: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sdW9uZy5tYWkvTVdELVdPUksvVFJBSU5JTkcvQU5HVUxBUl84X1RSQUlOSU5HL3N3YXRhbmcvYW5ndWxhcjgtdHJhaW5pbmctZnJvbnRlbmQvc3JjL2FwcC9mZWF0dXJlcy9za2lsbHMvc2tpbGwtbGlzdC9za2lsbC1saXN0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9mZWF0dXJlcy9za2lsbHMvc2tpbGwtbGlzdC9za2lsbC1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxvQkFBQTtBQ0FGOztBRE1BO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsNkJBQUE7QUNIRjs7QURNQTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtFQUNBLGFBQUE7RUFDQSxnQkFBQTtBQ0hGOztBRElFO0VBQ0UsZ0JBQUE7QUNGSjs7QURNQTtFQUNFLFlBQUE7RUFDQSxrQkFBQTtFQUNBLFFBQUE7RUFDQSxNQUFBO0VBQ0EsWUFBQTtBQ0hGIiwiZmlsZSI6InNyYy9hcHAvZmVhdHVyZXMvc2tpbGxzL3NraWxsLWxpc3Qvc2tpbGwtbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEZsZXggUmVzcG9uc2l2ZVxuLmZsZXgtY29tcC1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XG59XG5cbi5mbGV4LWNvbXAtaXRlbSB7XG59XG5cbi5wZXJzb24tZ3JpZC1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbn1cblxuLnBlcnNvbi1jYXJkLWl0ZW0ge1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGZsZXgtYmFzaXM6IDM1MHB4O1xuICBoZWlnaHQ6IDEyMHB4O1xuICBtYXJnaW4tdG9wOiAyMHB4O1xuICBtYXQtY2FyZC10aXRsZSB7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgfVxufVxuXG4ucGVyc29uLWF2YXRhciB7XG4gIHdpZHRoOiAxMDBweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMDtcbiAgdG9wOiAwO1xuICBtYXJnaW46IDEwcHg7XG59XG4iLCIuZmxleC1jb21wLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogc3RyZXRjaDtcbn1cblxuLnBlcnNvbi1ncmlkLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xufVxuXG4ucGVyc29uLWNhcmQtaXRlbSB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZmxleC1iYXNpczogMzUwcHg7XG4gIGhlaWdodDogMTIwcHg7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG59XG4ucGVyc29uLWNhcmQtaXRlbSBtYXQtY2FyZC10aXRsZSB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbi5wZXJzb24tYXZhdGFyIHtcbiAgd2lkdGg6IDEwMHB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDA7XG4gIG1hcmdpbjogMTBweDtcbn0iXX0= */\"","import { Component,  OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nimport { Skill} from '@core/models/skill';\nimport { AuthenticationService,SkillService } from '@core/services';\nimport { MediaChange, MediaObserver } from '@angular/flex-layout';\n\n\n@Component({\n\ttemplateUrl: './skill-list.component.html',\n\tstyleUrls: [ './skill-list.component.scss' ]\n})\nexport class SkillListComponent implements OnInit {\n\n\tskills: Skill[] = [];\n\tcolumns: number = 3;\n\twatcher: Subscription;\n\n\tconstructor(\n\t\tprivate skillService: SkillService,\n\t\t\n\t\tprivate router: Router,\n\t\tmedia: MediaObserver\n\t\t) {\n\t\t\n\t\t\tthis.watcher = media.media$.subscribe((change: MediaChange) => {\n\t\t\t\tif (change) {\n\t\t\t\t\tif (change.mqAlias === 'xs') {\n\t\t\t\t\t\tthis.columns = 1;\n\t\t\t\t\t} else if (change.mqAlias === 'sm') {\n\t\t\t\t\t\tthis.columns = 2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.columns = 3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t\n\n\tngOnInit() {\n\t\tthis.loadAllSkills();\n\t}\n\n\n\n\tdeactivateSkill(id: string) {\n\t\n\t}\n\n\tprivate loadAllSkills() {\n\t\tthis.skillService.getSkills().pipe(first()).subscribe((skills) => {\n\t\t\tthis.skills = skills;\n\t\t});\n\t}\n}\n","export default \".skill-profile .clear-float {\\n  clear: both;\\n}\\n.skill-profile .add-skill-level {\\n  float: right;\\n}\\n.skill-profile .align-left {\\n  float: left;\\n}\\n.skill-profile .skill-level-detail {\\n  margin: 30px 0px;\\n}\\n.skill-profile .skill-level-title {\\n  font-size: 18px;\\n}\\n.skill-profile .remove-skill-level {\\n  position: absolute;\\n  right: 0px;\\n  top: 0px;\\n  z-index: 10;\\n}\\n.skill-profile .remove-skill-level .mat-icon {\\n  margin-right: 0px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sdW9uZy5tYWkvTVdELVdPUksvVFJBSU5JTkcvQU5HVUxBUl84X1RSQUlOSU5HL3N3YXRhbmcvYW5ndWxhcjgtdHJhaW5pbmctZnJvbnRlbmQvc3JjL2FwcC9mZWF0dXJlcy9za2lsbHMvc2tpbGwtcHJvZmlsZS9za2lsbC1wcm9maWxlLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9mZWF0dXJlcy9za2lsbHMvc2tpbGwtcHJvZmlsZS9za2lsbC1wcm9maWxlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0ksV0FBQTtBQ0FSO0FERUk7RUFDSSxZQUFBO0FDQVI7QURJSTtFQUNJLFdBQUE7QUNGUjtBREtJO0VBQ0ksZ0JBQUE7QUNIUjtBRE1JO0VBQ0ksZUFBQTtBQ0pSO0FET0k7RUFDSSxrQkFBQTtFQUNBLFVBQUE7RUFDQSxRQUFBO0VBQ0EsV0FBQTtBQ0xSO0FET1E7RUFDSSxpQkFBQTtBQ0xaIiwiZmlsZSI6InNyYy9hcHAvZmVhdHVyZXMvc2tpbGxzL3NraWxsLXByb2ZpbGUvc2tpbGwtcHJvZmlsZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5za2lsbC1wcm9maWxlIHtcbiAgICAuY2xlYXItZmxvYXQge1xuICAgICAgICBjbGVhcjogYm90aDtcbiAgICB9XG4gICAgLmFkZC1za2lsbC1sZXZlbCB7XG4gICAgICAgIGZsb2F0OiByaWdodDtcblxuICAgIH1cblxuICAgIC5hbGlnbi1sZWZ0IHtcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgfVxuXG4gICAgLnNraWxsLWxldmVsLWRldGFpbCB7XG4gICAgICAgIG1hcmdpbjogMzBweCAwcHg7XG4gICAgfVxuXG4gICAgLnNraWxsLWxldmVsLXRpdGxlIHtcbiAgICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgIH1cblxuICAgIC5yZW1vdmUtc2tpbGwtbGV2ZWwge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHJpZ2h0OiAwcHg7XG4gICAgICAgIHRvcDogMHB4O1xuICAgICAgICB6LWluZGV4OiAxMDtcbiAgICAgICAgXG4gICAgICAgIC5tYXQtaWNvbiB7XG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDBweDtcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsIi5za2lsbC1wcm9maWxlIC5jbGVhci1mbG9hdCB7XG4gIGNsZWFyOiBib3RoO1xufVxuLnNraWxsLXByb2ZpbGUgLmFkZC1za2lsbC1sZXZlbCB7XG4gIGZsb2F0OiByaWdodDtcbn1cbi5za2lsbC1wcm9maWxlIC5hbGlnbi1sZWZ0IHtcbiAgZmxvYXQ6IGxlZnQ7XG59XG4uc2tpbGwtcHJvZmlsZSAuc2tpbGwtbGV2ZWwtZGV0YWlsIHtcbiAgbWFyZ2luOiAzMHB4IDBweDtcbn1cbi5za2lsbC1wcm9maWxlIC5za2lsbC1sZXZlbC10aXRsZSB7XG4gIGZvbnQtc2l6ZTogMThweDtcbn1cbi5za2lsbC1wcm9maWxlIC5yZW1vdmUtc2tpbGwtbGV2ZWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAwcHg7XG4gIHRvcDogMHB4O1xuICB6LWluZGV4OiAxMDtcbn1cbi5za2lsbC1wcm9maWxlIC5yZW1vdmUtc2tpbGwtbGV2ZWwgLm1hdC1pY29uIHtcbiAgbWFyZ2luLXJpZ2h0OiAwcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport {JsonConvert} from \"json2typescript\"\nimport { FieldSpecs } from '@app/shared/validation/field-spec'\nimport { Skill } from '@core/models/skill';\nimport { SkillService } from '@core/services/skill/skill.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { AlertService } from '@app/core';\nimport { SkillLevel } from '@core/models/skillLevel';\n\n@Component({\n\ttemplateUrl: './skill-profile.component.html',\n\tstyleUrls: [ './skill-profile.component.scss' ]\n})\nexport class SkillProfileComponent implements OnInit {\n    skillProfile: FormGroup;\n    loading = false;\n    submitted = false;\n    errorMessages: object = {};\n    \n    isComponentReady = false;\n    skillId: string = '';\n    private skillObject: Skill;\n\n    errorsDef = {\n        'network_error': 'There is error with your network, please check it and try it again',\n        'api_error': 'There is error with api, please try it again',\n        'server_message': 'Your skill not found',\n        'skill_level_require': 'Skill level is required'\n    }\n\n\tconstructor(\n        private formBuilder: FormBuilder,\n        private skillService: SkillService, \n        private router: Router,\n        private alertService: AlertService,\n        private route: ActivatedRoute\n\t) {}\n\n    get skillProfileForm() {\n        return this.skillProfile.controls\n    }\n    \n    get skillLevels() {\n        return this.skillProfile.get('skillLevels') as FormArray;\n    }\n\n    get isError() {\n        return (this.submitted === true && Object.keys(this.errorMessages).length > 0);\n    }\n\n\tngOnInit() {\n        \n        this.route.params.subscribe(params => {\n            if (params['id']) {\n                this.skillId = params['id'];\n                this.skillService.getSkillProfile(params['id'])\n                .pipe(\n                    catchError(this.handleError)\n                )\n                .subscribe(skill => {\n                    this.skillObject = this.convertFormDataToSkill(skill);\n                    this.initForm(this.skillObject);\n                    this.isComponentReady = true;\n                    this.initFormErrorMessage();\n                })\n            } else {\n                this.initForm();\n                this.isComponentReady = true;\n                this.initFormErrorMessage();\n            }\n        });\n\n\t}\n\n    initForm = (skill?: Skill) => {\n        this.skillProfile = this.formBuilder.group({\n            skillName: [skill ? skill.skillName : '', [FieldSpecs.fieldRequiredValidator('skillNameRequired', true), FieldSpecs.fieldMaxLengthValidator('skillNameMaxLength', true, 100)]],\n            skillSchemaName: [skill ? skill.skillSchemaName : '', [FieldSpecs.fieldRequiredValidator('skillSchemaNameRequired', true), FieldSpecs.fieldMaxLengthValidator('skillSchemaNameLength', true, 100)]],\n            skillStatus: [skill ? skill.skillStatus : true],\n            skillLevels: this.formBuilder.array([])\n        });\n\n        if (skill) {\n            skill.skillLevels.forEach(item => this.onAddSkillLevel(item));\n        }\n\n    }\n\n    initFormErrorMessage = () => {\n        this.errorMessages = {\n            'skill_level_require': this.skillProfile ? this.skillLevels.length < 1 : false\n        }\n    }\n\n    onAddSkillLevel(skillLevel?: SkillLevel) {\n        const skillLevelGroup = this.formBuilder.group({\n            skillLevelName: [skillLevel ? skillLevel.skillLevelName : '', [FieldSpecs.fieldRequiredValidator('skillLevelName', true), FieldSpecs.fieldMaxLengthValidator('skillLevelName', true, 50)]],\n            skillLevelDescription: [skillLevel ? skillLevel.skillLevelDescription : '', [FieldSpecs.fieldRequiredValidator('skillLevelDescription', true), FieldSpecs.fieldMaxLengthValidator('skillLevelDescription', true, 2000)]],\n        });\n\n        \n        const levels = this.skillProfile.get('skillLevels') as FormArray;\n        levels.push(skillLevelGroup);\n\n        this.errorMessages['skill_level_require'] = false;\n        this.submitted = false;\n    }\n\n    removeSkillLevel(skillLevelIndex) {\n        this.skillLevels.removeAt(skillLevelIndex);\n        if (this.skillLevels.length < 1) {\n            this.initFormErrorMessage();\n        }\n    }\n\n    onSubmit() {\n        this.submitted = true;\n       \n        if (this.skillProfile.valid && this.skillLevels.length > 0) {\n            if (this.skillObject) {\n                this.updateProfile();\n            } else {\n                this.createSkillProfile();\n            }\n        }\n    }\n\n    createSkillProfile = () => {\n        this.loading = true;\n        this.skillService.createSkillProfile(this.skillProfile.value)\n        .pipe(\n            catchError(this.handleError)\n        )\n        .subscribe(result => {\n            this.loading = false;\n            this.alertService.success('Your skill has been added successfully !');\n            this.router.navigate(['/skills']);\n        })\n    }\n\n    updateProfile = () => {\n        this.loading = true;\n        this.skillService.updateSkillProfile(this.skillId, this.skillProfile.value)\n        .pipe(\n            catchError(this.handleError)\n        )\n        .subscribe(result => {\n            this.loading = false;\n            this.alertService.success('Your skill has been updated successfully!');\n            this.router.navigate(['/skills']);\n        })\n    }\n\n    convertFormDataToSkill(formData: object) {\n        const jsonConvert: JsonConvert = new JsonConvert();\n        const skill: Skill = jsonConvert.deserializeObject(formData, Skill);\n        return skill;\n    }\n\n    handleError = (error: HttpErrorResponse) => {\n        this.initFormErrorMessage();\n        this.loading = false;\n        this.errorMessages['server_message']  = true;\n        this.errorsDef.server_message = error.toString();\n        this.alertService.error(error.toString());\n        return [];\n    }\n}\n","import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\nimport { SkillListComponent } from './skill-list/skill-list.component'\nimport { SkillProfileComponent } from './skill-profile/skill-profile.component'\n\nconst routes: Routes = [\n  {path:'', component:SkillListComponent},\n  {\n    path: 'skill-profile', component: SkillProfileComponent\n  },\n  {\n    path: ':id', component: SkillProfileComponent\n  }\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SkillRoutingModule {}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { CustomMaterialModule } from '@app/core'\nimport { SharedModule } from '@app/shared'\nimport { SkillRoutingModule } from './skill-routing.module'\nimport { SkillProfileComponent } from './skill-profile/skill-profile.component'\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms'\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\nimport { SkillListComponent } from './skill-list/skill-list.component'\n\n@NgModule({\n  declarations: [SkillProfileComponent, SkillListComponent],\n  imports: [\n        CommonModule, \n        SkillRoutingModule, \n        CustomMaterialModule,\n        SharedModule,\n        ReactiveFormsModule,\n        CKEditorModule,\n        FormsModule\n    ],\n})\nexport class SkillModule {}\n"],"sourceRoot":"webpack:///","file":"features-skills-skill-module-es5.js"}