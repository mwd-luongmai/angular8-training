{"version":3,"sources":["src/app/features/authentication/login/login.component.html","src/app/features/authentication/authentication-routing.module.ts","src/app/features/authentication/authentication.module.ts","src/app/features/authentication/login/login.component.ts","src/app/shared/validation/field-spec.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"flex-comp-container\\\">\\n  <mat-card>\\n    <mat-card-title>Login</mat-card-title>\\n    <mat-card-content>\\n      <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <form-input\\n          formControlName=\\\"username\\\"\\n          [errors]=\\\"f.username.errors\\\"\\n          [errorVisible]=\\\"submitted\\\"\\n          [placeholder]=\\\"'Username or Email'\\\"\\n          [icon]=\\\"'email'\\\"\\n        ></form-input>\\n\\n        <form-input\\n          formControlName=\\\"password\\\"\\n          [type]=\\\"'password'\\\"\\n          [errors]=\\\"f.password.errors\\\"\\n          [errorVisible]=\\\"submitted\\\"\\n          [placeholder]=\\\"'Password'\\\"\\n          [icon]=\\\"'lock'\\\"\\n        ></form-input>\\n\\n        <button mat-raised-button [disabled]=\\\"loading\\\" color=\\\"primary\\\">\\n          <mat-icon><i class=\\\"material-icons md-dark\\\">done</i></mat-icon>\\n          Login\\n        </button>\\n        <a mat-button routerLink=\\\"/users/register\\\" class=\\\"btn btn-link\\\">\\n          <mat-icon><i class=\\\"material-icons md-dark\\\">person_add</i></mat-icon>\\n          Register\\n        </a>\\n        <a mat-button routerLink=\\\"/users/forgot-password\\\" class=\\\"btn btn-link\\\">\\n          <mat-icon\\n            ><i class=\\\"material-icons md-dark\\\">contact_support</i></mat-icon\\n          >\\n          Forgot Password\\n        </a>\\n      </form>\\n    </mat-card-content>\\n  </mat-card>\\n  <app-loading [visible]=\\\"loading\\\"></app-loading>\\n</div>\\n\"","import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\nimport { LoginComponent } from './login/login.component'\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/auth/login',\n    pathMatch: 'full',\n  },\n  {\n    path: '',\n    children: [{ path: 'login', component: LoginComponent }],\n  },\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthenticationRoutingModule {}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms'\n\nimport { AuthenticationRoutingModule } from './authentication-routing.module'\nimport { LoginComponent } from './login/login.component'\nimport { SharedModule } from '@app/shared'\nimport { CustomMaterialModule } from '@app/core'\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    AuthenticationRoutingModule,\n    ReactiveFormsModule,\n    SharedModule,\n    CustomMaterialModule,\n    FormsModule,\n  ],\n})\nexport class AuthenticationModule {}\n","import { Component, OnInit } from '@angular/core'\nimport { FormBuilder, FormGroup } from '@angular/forms'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { first } from 'rxjs/operators'\n\nimport { AlertService, AuthenticationService } from '@core/services'\nimport { FieldSpecs } from '@app/shared/validation/field-spec'\n\n@Component({ templateUrl: 'login.component.html' })\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup\n  loading = false\n  submitted = false\n  returnUrl: string\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private alertService: AlertService\n  ) {\n    // redirect to home if already logged in\n    if (this.authenticationService.currentUserValue) {\n      this.router.navigate(['/'])\n    }\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', [FieldSpecs.fieldRequiredValidator('usernameRequired')]],\n      password: ['', [FieldSpecs.fieldRequiredValidator('passwordRequired')]],\n    })\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/'\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.loginForm.controls\n  }\n\n  onSubmit() {\n    this.submitted = true\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return\n    }\n\n    this.loading = true\n    this.authenticationService\n      .login(this.f.username.value, this.f.password.value)\n      .pipe(first())\n      .subscribe(\n        () => {\n          this.router.navigate([this.returnUrl])\n        },\n        error => {\n          this.alertService.error(error)\n          this.loading = false\n        }\n      )\n  }\n}\n","import { ValidatorFn, AbstractControl } from '@angular/forms'\n\nfunction finalizeValidationResult(result: {\n  [key: string]: boolean\n}): { [key: string]: boolean } | null {\n  const newResult: { [key: string]: boolean } = {}\n  Object.keys(result).forEach(property => {\n    if (result[property]) {\n      newResult[property] = true\n    }\n  })\n  if (newResult) {\n    return newResult\n  }\n  return null\n}\n\nconst USER_NAME_MIN_LENGTH = 6\nconst USER_NAME_PATTERN = new RegExp('^[a-zA-Z0-9]+$')\nconst NAME_MAX_LENGTH = 50\nconst COMPANY_MAX_LENGTH = 50\nconst EMAIL_PATTERN = new RegExp('^[^@]+@[^@]+$')\nconst PASSWORD_MIN_LENGTH = 8\nconst PASSWORD_NONALPHABETIC_PATTERN = new RegExp('[^a-zA-Z]+')\nconst PASSWORD_ALPHABETIC_PATTERN = new RegExp('[a-zA-Z]{4,}')\nconst PROFILE_LOCATION_MAX_LENGTH = 100\nconst BIO_MAX_LENGTH = 255\n\nexport class FieldSpecs {\n  static usernameValidator(\n    control: AbstractControl\n  ): { [key: string]: boolean } | null {\n    const username = control.value.trim()\n\n    const usernameRequired = !username\n    const usernameMinLength = username.length < USER_NAME_MIN_LENGTH\n    const usernamePattern = !USER_NAME_PATTERN.test(username)\n\n    if (usernameRequired) {\n      return { usernameRequired }\n    }\n    return finalizeValidationResult({\n      usernameRequired,\n      usernameMinLength,\n      usernamePattern,\n    })\n  }\n\n  static fieldRequiredValidator(\n    validatorName: string,\n    trimValue = true\n  ): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } | null => {\n      let value = control.value\n      if (trimValue) {\n        value = value.trim()\n      }\n      const result: { [key: string]: any } = {}\n      result[validatorName] = !value\n      return finalizeValidationResult(result)\n    }\n  }\n\n  static nameValidator(\n    control: AbstractControl\n  ): { [key: string]: any } | null {\n    const name = control.value.trim()\n\n    const nameRequired = !name\n    const nameMaxLength = name.length > NAME_MAX_LENGTH\n\n    if (nameRequired) {\n      return { nameRequired }\n    }\n    return finalizeValidationResult({ nameRequired, nameMaxLength })\n  }\n\n  static companyValidator(\n    control: AbstractControl\n  ): { [key: string]: any } | null {\n    const company = control.value.trim()\n\n    const companyRequired = !company\n    const companyMaxLength = company.length > COMPANY_MAX_LENGTH\n\n    if (companyRequired) {\n      return { companyRequired }\n    }\n    return finalizeValidationResult({ companyRequired, companyMaxLength })\n  }\n\n  static emailValidator(\n    control: AbstractControl\n  ): { [key: string]: any } | null {\n    const email = control.value.trim()\n    const emailRequired = !email\n    const emailPattern = !EMAIL_PATTERN.test(email)\n\n    if (emailRequired) {\n      return { emailRequired }\n    }\n    return finalizeValidationResult({ emailRequired, emailPattern })\n  }\n\n  static passwordValidator(\n    control: AbstractControl\n  ): { [key: string]: any } | null {\n    const password = control.value\n    const passwordRequired = !password\n    const passwordAlphabeticChars = !PASSWORD_ALPHABETIC_PATTERN.test(password)\n    const passwordNonAlphabetucChars = !PASSWORD_NONALPHABETIC_PATTERN.test(\n      password\n    )\n    const passwordMinLength = password.length < PASSWORD_MIN_LENGTH\n\n    if (passwordRequired) {\n      return { passwordRequired }\n    }\n    return finalizeValidationResult({\n      passwordRequired,\n      passwordAlphabeticChars,\n      passwordNonAlphabetucChars,\n      passwordMinLength,\n    })\n  }\n\n  static simplePasswordValidator(\n    control: AbstractControl\n  ): { [key: string]: any } | null {\n    const password = control.value\n    const passwordRequired = !password\n    const passwordMinLength = password.length < PASSWORD_MIN_LENGTH\n\n    if (passwordRequired) {\n      return { passwordRequired }\n    }\n    return finalizeValidationResult({ passwordRequired, passwordMinLength })\n  }\n\n  static profileLocationValidator(\n    control: AbstractControl\n  ): { [key: string]: any } | null {\n    const location = control.value.trim()\n\n    const profileLocationRequired = !location\n    const profileLocationMaxLength =\n      location.length > PROFILE_LOCATION_MAX_LENGTH\n\n    if (profileLocationRequired) {\n      return { profileLocationRequired }\n    }\n    return finalizeValidationResult({\n      profileLocationRequired,\n      profileLocationMaxLength,\n    })\n  }\n\n  static profileBioValidator(\n    control: AbstractControl\n  ): { [key: string]: any } | null {\n    const bio = control.value.trim()\n\n    const profileBioRequired = !bio\n    const profileBioMaxLength = bio.length > BIO_MAX_LENGTH\n\n    if (profileBioRequired) {\n      return { profileBioRequired }\n    }\n    return finalizeValidationResult({ profileBioRequired, profileBioMaxLength })\n  }\n}\n"],"sourceRoot":"webpack:///","file":"features-authentication-authentication-module-es5.js"}