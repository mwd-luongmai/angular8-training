{"version":3,"sources":["./src/app/features/authentication/login/login.component.html","./src/app/features/authentication/authentication-routing.module.ts","./src/app/features/authentication/authentication.module.ts","./src/app/features/authentication/login/login.component.ts"],"names":[],"mappings":"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","file":"features-authentication-authentication-module-es2015.js","sourcesContent":["export default \"<div class=\\\"flex-comp-container\\\">\\n  <mat-card>\\n    <mat-card-title>Login</mat-card-title>\\n    <mat-card-content>\\n      <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <form-input\\n          formControlName=\\\"username\\\"\\n          [errors]=\\\"f.username.errors\\\"\\n          [errorVisible]=\\\"submitted\\\"\\n          [placeholder]=\\\"'Username or Email'\\\"\\n          [icon]=\\\"'email'\\\"\\n        ></form-input>\\n\\n        <form-input\\n          formControlName=\\\"password\\\"\\n          [type]=\\\"'password'\\\"\\n          [errors]=\\\"f.password.errors\\\"\\n          [errorVisible]=\\\"submitted\\\"\\n          [placeholder]=\\\"'Password'\\\"\\n          [icon]=\\\"'lock'\\\"\\n        ></form-input>\\n\\n        <button mat-raised-button [disabled]=\\\"loading\\\" color=\\\"primary\\\">\\n          <mat-icon><i class=\\\"material-icons md-dark\\\">done</i></mat-icon>\\n          Login\\n        </button>\\n        <a mat-button routerLink=\\\"/user/sign-up\\\" class=\\\"btn btn-link\\\">\\n          <mat-icon><i class=\\\"material-icons md-dark\\\">person_add</i></mat-icon>\\n          Register\\n        </a>\\n        <a mat-button routerLink=\\\"/user/forgot-password\\\" class=\\\"btn btn-link\\\">\\n          <mat-icon\\n            ><i class=\\\"material-icons md-dark\\\">contact_support</i></mat-icon\\n          >\\n          Forgot Password\\n        </a>\\n      </form>\\n    </mat-card-content>\\n  </mat-card>\\n  <app-loading [visible]=\\\"loading\\\"></app-loading>\\n</div>\\n\"","import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\nimport { LoginComponent } from './login/login.component'\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/auth/login',\n    pathMatch: 'full',\n  },\n  {\n    path: '',\n    children: [{ path: 'login', component: LoginComponent }],\n  },\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthenticationRoutingModule {}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms'\n\nimport { AuthenticationRoutingModule } from './authentication-routing.module'\nimport { LoginComponent } from './login/login.component'\nimport { SharedModule } from '@app/shared'\nimport { CustomMaterialModule } from '@app/core'\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    AuthenticationRoutingModule,\n    ReactiveFormsModule,\n    SharedModule,\n    CustomMaterialModule,\n    FormsModule,\n  ],\n})\nexport class AuthenticationModule {}\n","import { Component, OnInit } from '@angular/core'\nimport { FormBuilder, FormGroup } from '@angular/forms'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { first } from 'rxjs/operators'\n\nimport { AlertService, AuthenticationService } from '@core/services'\nimport { FieldSpecs } from '@app/shared/validation/field-spec'\n\n@Component({ templateUrl: 'login.component.html' })\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup\n  loading = false\n  submitted = false\n  returnUrl: string\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private alertService: AlertService\n  ) {\n    // redirect to home if already logged in\n    if (this.authenticationService.currentUserValue) {\n      this.router.navigate(['/'])\n    }\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', [FieldSpecs.fieldRequiredValidator('usernameRequired')]],\n      password: ['', [FieldSpecs.fieldRequiredValidator('passwordRequired')]],\n    })\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/'\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.loginForm.controls\n  }\n\n  onSubmit() {\n    this.submitted = true\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return\n    }\n\n    this.loading = true\n    this.authenticationService\n      .login(this.f.username.value, this.f.password.value)\n      .pipe(first())\n      .subscribe(\n        () => {\n          this.router.navigate([this.returnUrl])\n        },\n        error => {\n          this.alertService.error(error)\n          this.loading = false\n        }\n      )\n  }\n}\n"],"sourceRoot":"webpack:///"}